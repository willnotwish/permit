# Upstream apps use services running in the same pod: hence localhost
upstream backend_app {
  server localhost:3000;
}

server {
  # We only need handle http requests; SSL is terminated downstream.
  listen 80 default_server;

  root   /var/www/html;
  index  index.html;

  # Deny requests for files that should never be accessed
  location ~ /\. {
    deny all;
  }

  location ~* ^.+\.(rb|log)$ {
    deny all;
  }

  # Serve static assets directly if they exist
  location ~ ^/(assets|images|javascripts|stylesheets|system|packs)/ {
    try_files $uri
              @upstream;

    access_log off;
    gzip_static on; # to serve pre-gzipped version

    expires max;
    add_header Cache-Control public;

    # Some browsers still send conditional-GET requests if there's a
    # Last-Modified header or an ETag header even if they haven't
    # reached the expiry date sent in the Expires header.
    add_header Last-Modified "";
    add_header ETag "";
    break;
  }

  # Upstream
  location / {
    try_files /system/maintenance.html
              $uri
              @upstream;
  }

  location @upstream {
    # All access is via https, irrespective of what we are told
    # by downstream proxies (eg, ingress-nginx)
    proxy_set_header X-Forwarded-Proto https;
    proxy_set_header X-Real-IP  $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_redirect off;
    proxy_max_temp_file_size 0;
    proxy_pass http://backend_app;
  }
}